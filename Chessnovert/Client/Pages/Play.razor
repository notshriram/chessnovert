@page "/play"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Chessnovert.Shared
@using Microsoft.AspNetCore.SignalR.Client
@*@attribute [Authorize]
@inject HttpClient Http*@
@inject NavigationManager NavManager

<button class="btn btn-outline-primary" @onclick="CreateGame">Create Game</button>
<div>
    @if (Games != null)
    {
        @foreach (Chessnovert.Shared.Game game in Games)
        {
            <div>
                <a href="/game/@game.Id">@game.Id</a>
            </div>
        }
    }
</div>
@code {
    List<Chessnovert.Shared.Game>? Games;
    HttpClient httpClient = new();

    protected override async Task OnInitializedAsync(){
        try
        {
            //TO BE REPLACED WITH: injected http;
            Games = await httpClient.GetFromJsonAsync<List<Chessnovert.Shared.Game>>("https://tl222.local:5001/api/Games");
        }
        catch (Exception exception)
        {
            //exception.Redirect();
            Console.WriteLine(exception);
        }
    }

    async Task CreateGame(){
        // send current user Id
        var response = await httpClient.PostAsJsonAsync("https://tl222.local:5001/api/Games", new TimeSpan(0, 1, 0));
        if(response.IsSuccessStatusCode)
        {
            Chessnovert.Shared.Game? createdGame = await response.Content.ReadFromJsonAsync<Chessnovert.Shared.Game>();

            if (createdGame != null)
            {
                NavManager.NavigateTo($"/game/{createdGame.Id}");
            }

            else
            {
                Console.WriteLine("Failed to Create Game");
            }
        }
    }
}